<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>

    <parent>
        <artifactId>enzo</artifactId>
        <groupId>mallory.logan</groupId>
        <version>0.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>frontend</artifactId>
    <version>0.0.0-SNAPSHOT</version>

    <dependencies>
        <dependency>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>1.12.1</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <!-- empty build directory -->
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>build</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <!-- Conditionally sets the npm-install-arg property to either `version` or `install` based on if -->
                        <!-- the `package.json` changed between the initial and current build. -->
                        <!-- If a change was detected, `npm install` will be executed, else `npm version` -->
                        <id>web-install-uptodate</id>
                        <goals>
                            <goal>uptodate-property</goal>
                        </goals>
                        <configuration>
                            <name>web-install-arg</name>
                            <value>-v</value>
                            <else>install</else>
                            <fileSet>
                                <directory>${project.basedir}</directory>
                                <outputDirectory>${project.basedir}/target/classes/static</outputDirectory>
                                <includes>
                                    <include>package.json</include>
                                </includes>
                                <mapper>
                                    <type>merge</type>
                                    <from>*.*</from>
                                    <to>index.html</to>
                                </mapper>
                            </fileSet>
                        </configuration>
                    </execution>

                    <execution>
                        <!-- Conditionally sets the build script property to either `skip` or `prod` based on if -->
                        <!-- any files under `src/` changed between the initial and current build. -->
                        <!-- If a change was detected, `npm run build:prod` will be executed, else `npm run build:skip` -->
                        <id>web-build-uptodate</id>
                        <goals>
                            <goal>uptodate-property</goal>
                        </goals>
                        <configuration>
                            <name>build.script</name>
                            <value>skip</value>
                            <else>prod</else>
                            <fileSet>
                                <directory>${project.basedir}/src</directory>
                                <outputDirectory>${project.basedir}/target/classes/static</outputDirectory>
                                <includes>
                                    <include>*/**</include>
                                </includes>
                                <mapper>
                                    <type>merge</type>
                                    <from>*.*</from>
                                    <to>index.html</to>
                                </mapper>
                            </fileSet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- executes local npm binary with args -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>exec-web-install</id>
                        <phase>initialize</phase>
                        <configuration>
                            <executable>npm</executable>
                            <arguments>
                                <argument>${web-install-arg}</argument>
                            </arguments>
                        </configuration>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>exec-npm-build</id>
                        <phase>compile</phase>
                        <configuration>
                            <executable>npm</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>build:${build.script}</argument>
                            </arguments>
                        </configuration>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/classes/static</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>build</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>